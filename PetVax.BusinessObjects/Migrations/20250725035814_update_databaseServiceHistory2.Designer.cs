// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PediVax.BusinessObjects.DBContext;

#nullable disable

namespace PetVax.BusinessObjects.Migrations
{
    [DbContext(typeof(PetVaxContext))]
    [Migration("20250725035814_update_databaseServiceHistory2")]
    partial class update_databaseServiceHistory2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefereshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isVerify")
                        .HasColumnType("bit");

                    b.HasKey("AccountId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AccessToken = "",
                            CreatedAt = new DateTime(2025, 7, 25, 3, 58, 13, 745, DateTimeKind.Utc).AddTicks(9186),
                            CreatedBy = "system",
                            Email = "admin@petvax.com",
                            PasswordHash = "IfzaJGP4ouUBkY/kh6Fa9dctuwvn0KtzbRbnHWpf8rA=",
                            PasswordSalt = "1zFe4TPiAN4N6+0NOt30VQR3HL9lUse5oR/REkA2prs=",
                            RefereshToken = "",
                            Role = 1,
                            isDeleted = false,
                            isVerify = true
                        },
                        new
                        {
                            AccountId = 2,
                            AccessToken = "",
                            CreatedAt = new DateTime(2025, 7, 25, 3, 58, 13, 745, DateTimeKind.Utc).AddTicks(9190),
                            CreatedBy = "system",
                            Email = "staff@petvax.com",
                            PasswordHash = "dBGl1mCaFYxe42Qb88gaHc3LBSphaj9CgF5JamgMviM=",
                            PasswordSalt = "yFa4tpK1vH354RDHlAyd8uaS4ziPbfVZNVYKcyYbsr4=",
                            RefereshToken = "",
                            Role = 2,
                            isDeleted = false,
                            isVerify = true
                        });
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppointmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AppointmentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PetId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.AppointmentDetail", b =>
                {
                    b.Property<int>("AppointmentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentDetailId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppointmentDetailCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.Property<string>("GeneralCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HealthConditionId")
                        .HasColumnType("int");

                    b.Property<string>("HeartRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MicrochipItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextVaccinationInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceHistoryId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VaccinationCertificateId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("VetId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AppointmentDetailId");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.HasIndex("DiseaseId");

                    b.HasIndex("HealthConditionId")
                        .IsUnique()
                        .HasFilter("[HealthConditionId] IS NOT NULL");

                    b.HasIndex("MicrochipItemId")
                        .IsUnique()
                        .HasFilter("[MicrochipItemId] IS NOT NULL");

                    b.HasIndex("ServiceHistoryId");

                    b.HasIndex("VaccinationCertificateId")
                        .IsUnique()
                        .HasFilter("[VaccinationCertificateId] IS NOT NULL");

                    b.HasIndex("VaccineBatchId");

                    b.HasIndex("VetId");

                    b.ToTable("AppointmentDetail");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.ColdChainLog", b =>
                {
                    b.Property<int>("ColdChainLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColdChainLogId"));

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Humidity")
                        .HasColumnType("float");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<int>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ColdChainLogId");

                    b.HasIndex("VaccineBatchId");

                    b.ToTable("ColdChainLog");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentPoints")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembershipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RedeemablePoints")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalSpent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CustomerId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("MembershipId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.CustomerVoucher", b =>
                {
                    b.Property<int>("CustomerVoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerVoucherId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RedeemedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RedeemedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CustomerVoucherId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VoucherId");

                    b.ToTable("CustomerVoucher");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Disease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("DiseaseId");

                    b.ToTable("Disease");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.HealthCondition", b =>
                {
                    b.Property<int>("HealthConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthConditionId"));

                    b.Property<string>("Behavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreathingRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Conclusion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Different")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Digestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EHNM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excrete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeartRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MicrochipItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PetId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Psycho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Respiratory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinAFur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VetId")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("HealthConditionId");

                    b.HasIndex("MicrochipItemId");

                    b.HasIndex("PetId");

                    b.HasIndex("VetId");

                    b.ToTable("HealthCondition");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.HealthConditionVaccinationCertificate", b =>
                {
                    b.Property<int>("HealthConditionVaccinationCertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthConditionVaccinationCertificateId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HealthConditionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VaccinationCertificateId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("HealthConditionVaccinationCertificateId");

                    b.HasIndex("HealthConditionId");

                    b.HasIndex("VaccinationCertificateId");

                    b.ToTable("HealthConditionVaccinationCertificate");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Membership", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipId"));

                    b.Property<string>("Benefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembershipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinPoints")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("MembershipId");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Microchip", b =>
                {
                    b.Property<int>("MicrochipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MicrochipId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MicrochipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("MicrochipId");

                    b.ToTable("Microchip");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.MicrochipItem", b =>
                {
                    b.Property<int>("MicrochipItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MicrochipItemId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MicrochipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("MicrochipItemId");

                    b.HasIndex("MicrochipId")
                        .IsUnique();

                    b.HasIndex("PetId");

                    b.ToTable("MicrochipItem");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppointmentDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CheckoutUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("HealthConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("MicrochipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VaccinationCertificateId")
                        .HasColumnType("int");

                    b.Property<int?>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("PaymentId");

                    b.HasIndex("AppointmentDetailId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.HasIndex("HealthConditionId");

                    b.HasIndex("MicrochipId");

                    b.HasIndex("VaccinationCertificateId");

                    b.HasIndex("VaccineBatchId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceToLive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSterilized")
                        .HasColumnType("bit");

                    b.HasKey("PetId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.PointTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("TransactionId");

                    b.HasIndex("CustomerId");

                    b.ToTable("PointTransaction");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.ServiceHistory", b =>
                {
                    b.Property<int>("ServiceHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceHistoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ServiceHistoryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ServiceHistory");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationCertificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<string>("CertificateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int>("DoseNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MicrochipItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CertificateId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("MicrochipItemId");

                    b.HasIndex("PetId");

                    b.HasIndex("VetId");

                    b.ToTable("VaccinationCertificate");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationSchedule", b =>
                {
                    b.Property<int>("VaccinationScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccinationScheduleId"));

                    b.Property<int>("AgeInterval")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int>("DoseNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccinationScheduleId");

                    b.HasIndex("DiseaseId");

                    b.ToTable("VaccinationSchedule");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vaccine", b =>
                {
                    b.Property<int>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccineCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineId");

                    b.ToTable("Vaccine");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineBatch", b =>
                {
                    b.Property<int>("VaccineBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineBatchId"));

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineBatchId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccineBatch");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineDisease", b =>
                {
                    b.Property<int>("VaccineDiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineDiseaseId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineDiseaseId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccineDisease");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExport", b =>
                {
                    b.Property<int>("VaccineExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineExportId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExportDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineExportId");

                    b.HasIndex("VaccineBatchId");

                    b.ToTable("VaccineExport");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExportDetail", b =>
                {
                    b.Property<int>("VaccineExportDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineExportDetailId"));

                    b.Property<int?>("AppointmentDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineExportId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineExportDetailId");

                    b.HasIndex("AppointmentDetailId")
                        .IsUnique()
                        .HasFilter("[AppointmentDetailId] IS NOT NULL");

                    b.HasIndex("VaccineBatchId");

                    b.HasIndex("VaccineExportId");

                    b.ToTable("VaccineExportDetail");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineProfile", b =>
                {
                    b.Property<int>("VaccineProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineProfileId"));

                    b.Property<int?>("AppointmentDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextVaccinationInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PreferedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VaccinationScheduleId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineProfileId");

                    b.HasIndex("AppointmentDetailId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("PetId");

                    b.HasIndex("VaccinationScheduleId");

                    b.ToTable("VaccineProfile");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceipt", b =>
                {
                    b.Property<int>("VaccineReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineReceiptId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineReceiptId");

                    b.HasIndex("VaccineBatchId");

                    b.ToTable("VaccineReceipt");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceiptDetail", b =>
                {
                    b.Property<int>("VaccineReceiptDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineReceiptDetailId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Suppiler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineReceiptId")
                        .HasColumnType("int");

                    b.Property<string>("VaccineStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VaccineReceiptDetailId");

                    b.HasIndex("VaccineBatchId");

                    b.HasIndex("VaccineReceiptId");

                    b.ToTable("VaccineReceiptDetail");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vet", b =>
                {
                    b.Property<int>("VetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VetId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VetCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VetId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Vet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VetSchedule", b =>
                {
                    b.Property<int>("VetScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VetScheduleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SlotNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VetScheduleId");

                    b.HasIndex("VetId");

                    b.ToTable("VetSchedule");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Voucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointsRequired")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("VoucherId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Appointment", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithMany("Appointments")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.AppointmentDetail", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Appointment", "Appointment")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "AppointmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany()
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.HealthCondition", "HealthCondition")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "HealthConditionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.MicrochipItem", "MicrochipItem")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "MicrochipItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.ServiceHistory", null)
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("ServiceHistoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.VaccinationCertificate", "VaccinationCertificate")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "VaccinationCertificateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.Vet", "Vet")
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Appointment");

                    b.Navigation("Disease");

                    b.Navigation("HealthCondition");

                    b.Navigation("MicrochipItem");

                    b.Navigation("VaccinationCertificate");

                    b.Navigation("VaccineBatch");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.ColdChainLog", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithMany("ColdChainLogs")
                        .HasForeignKey("VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VaccineBatch");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Customer", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Account", "Account")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.Customer", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Membership", "Membership")
                        .WithMany("Customers")
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Account");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.CustomerVoucher", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("CustomerVouchers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Voucher", "Voucher")
                        .WithMany("CustomerVouchers")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.HealthCondition", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.MicrochipItem", "MicrochipItem")
                        .WithMany()
                        .HasForeignKey("MicrochipItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithMany("HealthConditions")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.Vet", "Vet")
                        .WithMany("HealthConditions")
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MicrochipItem");

                    b.Navigation("Pet");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.HealthConditionVaccinationCertificate", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.HealthCondition", "HealthCondition")
                        .WithMany("HealthConditionVaccinationCertificates")
                        .HasForeignKey("HealthConditionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.VaccinationCertificate", "VaccinationCertificate")
                        .WithMany("HealthConditionVaccinationCertificates")
                        .HasForeignKey("VaccinationCertificateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HealthCondition");

                    b.Navigation("VaccinationCertificate");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.MicrochipItem", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Microchip", "Microchip")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.MicrochipItem", "MicrochipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", null)
                        .WithMany("MicrochipItems")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Microchip");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Payment", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.AppointmentDetail", "AppointmentDetail")
                        .WithOne("Payment")
                        .HasForeignKey("PetVax.BusinessObjects.Models.Payment", "AppointmentDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.HealthCondition", "HealthCondition")
                        .WithMany()
                        .HasForeignKey("HealthConditionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.Microchip", "Microchip")
                        .WithMany()
                        .HasForeignKey("MicrochipId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.VaccinationCertificate", "VaccinationCertificate")
                        .WithMany()
                        .HasForeignKey("VaccinationCertificateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithMany()
                        .HasForeignKey("VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AppointmentDetail");

                    b.Navigation("Customer");

                    b.Navigation("HealthCondition");

                    b.Navigation("Microchip");

                    b.Navigation("VaccinationCertificate");

                    b.Navigation("VaccineBatch");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Pet", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Pets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.PointTransaction", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.ServiceHistory", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("ServiceHistories")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationCertificate", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany("VaccinationCertificates")
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.MicrochipItem", "MicrochipItem")
                        .WithMany()
                        .HasForeignKey("MicrochipItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithMany("VaccinationCertificates")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Vet", "Vet")
                        .WithMany("VaccinationCertificates")
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disease");

                    b.Navigation("MicrochipItem");

                    b.Navigation("Pet");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationSchedule", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany("VaccinationSchedules")
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disease");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineBatch", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Vaccine", "Vaccine")
                        .WithMany("VaccineBatches")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineDisease", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany("VaccineDiseases")
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Vaccine", "Vaccine")
                        .WithMany("VaccineDiseases")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disease");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExport", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", null)
                        .WithMany("VaccineExports")
                        .HasForeignKey("VaccineBatchId");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExportDetail", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.AppointmentDetail", "AppointmentDetail")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.VaccineExportDetail", "AppointmentDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithMany()
                        .HasForeignKey("VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineExport", "VaccineExport")
                        .WithMany("VaccineExportDetails")
                        .HasForeignKey("VaccineExportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppointmentDetail");

                    b.Navigation("VaccineBatch");

                    b.Navigation("VaccineExport");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineProfile", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.AppointmentDetail", "AppointmentDetail")
                        .WithMany("VaccineProfiles")
                        .HasForeignKey("AppointmentDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany("VaccineProfiles")
                        .HasForeignKey("DiseaseId");

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithMany("VaccineProfiles")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccinationSchedule", "VaccinationSchedule")
                        .WithMany("VaccineProfiles")
                        .HasForeignKey("VaccinationScheduleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AppointmentDetail");

                    b.Navigation("Disease");

                    b.Navigation("Pet");

                    b.Navigation("VaccinationSchedule");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceipt", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", null)
                        .WithMany("VaccineReceipts")
                        .HasForeignKey("VaccineBatchId");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceiptDetail", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithMany()
                        .HasForeignKey("VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineReceipt", "VaccineReceipt")
                        .WithMany("VaccineReceiptDetails")
                        .HasForeignKey("VaccineReceiptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VaccineBatch");

                    b.Navigation("VaccineReceipt");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vet", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Account", "Account")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.Vet", "AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VetSchedule", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Vet", "Vet")
                        .WithMany("VetSchedules")
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Voucher", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.PointTransaction", "PointTransaction")
                        .WithMany("Vouchers")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PointTransaction");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.AppointmentDetail", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("VaccineProfiles");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Customer", b =>
                {
                    b.Navigation("CustomerVouchers");

                    b.Navigation("Pets");

                    b.Navigation("ServiceHistories");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Disease", b =>
                {
                    b.Navigation("VaccinationCertificates");

                    b.Navigation("VaccinationSchedules");

                    b.Navigation("VaccineDiseases");

                    b.Navigation("VaccineProfiles");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.HealthCondition", b =>
                {
                    b.Navigation("HealthConditionVaccinationCertificates");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Membership", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Pet", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("HealthConditions");

                    b.Navigation("MicrochipItems");

                    b.Navigation("VaccinationCertificates");

                    b.Navigation("VaccineProfiles");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.PointTransaction", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.ServiceHistory", b =>
                {
                    b.Navigation("AppointmentDetails");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationCertificate", b =>
                {
                    b.Navigation("HealthConditionVaccinationCertificates");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationSchedule", b =>
                {
                    b.Navigation("VaccineProfiles");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vaccine", b =>
                {
                    b.Navigation("VaccineBatches");

                    b.Navigation("VaccineDiseases");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineBatch", b =>
                {
                    b.Navigation("AppointmentDetails");

                    b.Navigation("ColdChainLogs");

                    b.Navigation("VaccineExports");

                    b.Navigation("VaccineReceipts");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExport", b =>
                {
                    b.Navigation("VaccineExportDetails");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceipt", b =>
                {
                    b.Navigation("VaccineReceiptDetails");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vet", b =>
                {
                    b.Navigation("AppointmentDetails");

                    b.Navigation("HealthConditions");

                    b.Navigation("VaccinationCertificates");

                    b.Navigation("VetSchedules");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Voucher", b =>
                {
                    b.Navigation("CustomerVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
