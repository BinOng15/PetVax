// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PediVax.BusinessObjects.DBContext;

#nullable disable

namespace PetVax.BusinessObjects.Migrations
{
    [DbContext(typeof(PetVaxContext))]
    [Migration("20250603054804_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefereshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.ToTable("Account", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppointmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PetId");

                    b.ToTable("Appointment", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.AppointmentDetail", b =>
                {
                    b.Property<int>("AppointmentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentDetailId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppointmentDetailCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HealthConditionId")
                        .HasColumnType("int");

                    b.Property<int>("MicrochipItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextVaccinationInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassportId")
                        .HasColumnType("int");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceHistoryId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineProfileId")
                        .HasColumnType("int");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentDetailId");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.HasIndex("HealthConditionId")
                        .IsUnique();

                    b.HasIndex("MicrochipItemId")
                        .IsUnique();

                    b.HasIndex("PassportId")
                        .IsUnique();

                    b.HasIndex("ServiceHistoryId");

                    b.HasIndex("VaccineBatchId")
                        .IsUnique();

                    b.HasIndex("VaccineProfileId");

                    b.HasIndex("VetId");

                    b.ToTable("AppointmentDetail", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPoints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MembershipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("MembershipId")
                        .IsUnique();

                    b.ToTable("Customer", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Disease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiseaseId");

                    b.ToTable("Disease", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.HealthCondition", b =>
                {
                    b.Property<int>("HealthConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthConditionId"));

                    b.Property<string>("Behavior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreathingRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Conclusion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Different")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Digestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EHNM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excrete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeartRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("Psycho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Respiratory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinAFur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HealthConditionId");

                    b.HasIndex("PetId");

                    b.ToTable("HealthCondition", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Membership", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipId"));

                    b.Property<string>("Benefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembershipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinPoints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MembershipId");

                    b.ToTable("Membership", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Microchip", b =>
                {
                    b.Property<int>("MicrochipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MicrochipId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MicrochipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MicrochipId");

                    b.ToTable("Microchip", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.MicrochipItem", b =>
                {
                    b.Property<int>("MicrochipItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MicrochipItemId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MicrochipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MicrochipItemId");

                    b.HasIndex("MicrochipId")
                        .IsUnique();

                    b.HasIndex("PetId");

                    b.ToTable("MicrochipItem", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppointmentDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("AppointmentDetailId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.HasIndex("VaccineId");

                    b.ToTable("Payment", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSterilized")
                        .HasColumnType("bit");

                    b.HasKey("PetId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Pet", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.PetPassport", b =>
                {
                    b.Property<int>("PassportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassportId"));

                    b.Property<DateTime>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HealthCheckDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HealthConditionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MicrochipItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccinationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRabiesVaccinated")
                        .HasColumnType("bit");

                    b.HasKey("PassportId");

                    b.HasIndex("HealthConditionId");

                    b.HasIndex("MicrochipItemId");

                    b.HasIndex("PetId");

                    b.ToTable("PetPassport", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.PointTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.HasIndex("CustomerId");

                    b.ToTable("PointTransaction", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.ServiceHistory", b =>
                {
                    b.Property<int>("ServiceHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceHistoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceHistoryId");

                    b.ToTable("ServiceHistory", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationSchedule", b =>
                {
                    b.Property<int>("VaccinationScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccinationScheduleId"));

                    b.Property<int>("AgeInterval")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int>("DoseNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VaccinationScheduleId");

                    b.HasIndex("DiseaseId");

                    b.ToTable("VaccinationSchedule", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vaccine", b =>
                {
                    b.Property<int>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccineCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VaccineId");

                    b.ToTable("Vaccine", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineBatch", b =>
                {
                    b.Property<int>("VaccineBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineBatchId"));

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("VaccineBatchId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccineBatch", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineDisease", b =>
                {
                    b.Property<int>("VaccineDiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineDiseaseId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("VaccineDiseaseId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccineDisease", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExport", b =>
                {
                    b.Property<int>("VaccineExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineExportId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExportDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VaccineBatchId")
                        .HasColumnType("int");

                    b.HasKey("VaccineExportId");

                    b.HasIndex("VaccineBatchId");

                    b.ToTable("VaccineExport", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExportDetail", b =>
                {
                    b.Property<int>("VaccineExportDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineExportDetailId"));

                    b.Property<int>("AppointmentDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineExportId")
                        .HasColumnType("int");

                    b.HasKey("VaccineExportDetailId");

                    b.HasIndex("AppointmentDetailId")
                        .IsUnique();

                    b.HasIndex("VaccineBatchId");

                    b.HasIndex("VaccineExportId");

                    b.ToTable("VaccineExportDetail", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineProfile", b =>
                {
                    b.Property<int>("VaccineProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineProfileId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextVaccinationInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PreferedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VaccinationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VaccinationScheduleId")
                        .HasColumnType("int");

                    b.HasKey("VaccineProfileId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("VaccinationScheduleId");

                    b.ToTable("VaccineProfile", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceipt", b =>
                {
                    b.Property<int>("VaccineReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineReceiptId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Suppiler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VaccineBatchId")
                        .HasColumnType("int");

                    b.HasKey("VaccineReceiptId");

                    b.HasIndex("VaccineBatchId");

                    b.ToTable("VaccineReceipt", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceiptDetail", b =>
                {
                    b.Property<int>("VaccineReceiptDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineReceiptDetailId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("VaccineBatchId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineReceiptId")
                        .HasColumnType("int");

                    b.HasKey("VaccineReceiptDetailId");

                    b.HasIndex("VaccineBatchId");

                    b.HasIndex("VaccineReceiptId");

                    b.ToTable("VaccineReceiptDetail", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vet", b =>
                {
                    b.Property<int>("VetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VetId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VetCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VetId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Vet", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VetSchedule", b =>
                {
                    b.Property<int>("VetScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VetScheduleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SlotNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("VetScheduleId");

                    b.HasIndex("VetId");

                    b.ToTable("VetSchedule", "dbo");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Appointment", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithMany("Appointments")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.AppointmentDetail", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Appointment", "Appointment")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "AppointmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.HealthCondition", "HealthCondition")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "HealthConditionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.MicrochipItem", "MicrochipItem")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "MicrochipItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.PetPassport", "PetPassport")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "PassportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.ServiceHistory", null)
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("ServiceHistoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.AppointmentDetail", "VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineProfile", "VaccineProfile")
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("VaccineProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Vet", "Vet")
                        .WithMany("AppointmentDetails")
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("HealthCondition");

                    b.Navigation("MicrochipItem");

                    b.Navigation("PetPassport");

                    b.Navigation("VaccineBatch");

                    b.Navigation("VaccineProfile");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Customer", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Account", "Account")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.Customer", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Membership", "Membership")
                        .WithOne("Customer")
                        .HasForeignKey("PetVax.BusinessObjects.Models.Customer", "MembershipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.HealthCondition", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithMany("HealthConditions")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.MicrochipItem", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Microchip", "Microchip")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.MicrochipItem", "MicrochipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", null)
                        .WithMany("MicrochipItems")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Microchip");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Payment", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.AppointmentDetail", "AppointmentDetail")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.Payment", "AppointmentDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Vaccine", "Vaccine")
                        .WithMany("Payments")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppointmentDetail");

                    b.Navigation("Customer");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Pet", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Pets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.PetPassport", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.HealthCondition", "HealthCondition")
                        .WithMany()
                        .HasForeignKey("HealthConditionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.MicrochipItem", "MicrochipItem")
                        .WithMany()
                        .HasForeignKey("MicrochipItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithMany("PetPassports")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HealthCondition");

                    b.Navigation("MicrochipItem");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.PointTransaction", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationSchedule", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany("VaccinationSchedules")
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disease");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineBatch", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Vaccine", "Vaccine")
                        .WithMany("VaccineBatches")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineDisease", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany("VaccineDiseases")
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Vaccine", "Vaccine")
                        .WithMany("VaccineDiseases")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disease");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExport", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", null)
                        .WithMany("VaccineExports")
                        .HasForeignKey("VaccineBatchId");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExportDetail", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.AppointmentDetail", "AppointmentDetail")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.VaccineExportDetail", "AppointmentDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithMany()
                        .HasForeignKey("VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineExport", "VaccineExport")
                        .WithMany("VaccineExportDetails")
                        .HasForeignKey("VaccineExportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppointmentDetail");

                    b.Navigation("VaccineBatch");

                    b.Navigation("VaccineExport");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineProfile", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Disease", "Disease")
                        .WithMany("VaccineProfiles")
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.Pet", "Pet")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.VaccineProfile", "PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccinationSchedule", null)
                        .WithMany("VaccineProfiles")
                        .HasForeignKey("VaccinationScheduleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Disease");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceipt", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", null)
                        .WithMany("VaccineReceipts")
                        .HasForeignKey("VaccineBatchId");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceiptDetail", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.VaccineBatch", "VaccineBatch")
                        .WithMany()
                        .HasForeignKey("VaccineBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetVax.BusinessObjects.Models.VaccineReceipt", "VaccineReceipt")
                        .WithMany("VaccineReceiptDetails")
                        .HasForeignKey("VaccineReceiptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VaccineBatch");

                    b.Navigation("VaccineReceipt");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vet", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Account", "Account")
                        .WithOne()
                        .HasForeignKey("PetVax.BusinessObjects.Models.Vet", "AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VetSchedule", b =>
                {
                    b.HasOne("PetVax.BusinessObjects.Models.Vet", "Vet")
                        .WithMany("VetSchedules")
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Customer", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Disease", b =>
                {
                    b.Navigation("VaccinationSchedules");

                    b.Navigation("VaccineDiseases");

                    b.Navigation("VaccineProfiles");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Membership", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Pet", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("HealthConditions");

                    b.Navigation("MicrochipItems");

                    b.Navigation("PetPassports");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.ServiceHistory", b =>
                {
                    b.Navigation("AppointmentDetails");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccinationSchedule", b =>
                {
                    b.Navigation("VaccineProfiles");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vaccine", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("VaccineBatches");

                    b.Navigation("VaccineDiseases");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineBatch", b =>
                {
                    b.Navigation("VaccineExports");

                    b.Navigation("VaccineReceipts");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineExport", b =>
                {
                    b.Navigation("VaccineExportDetails");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineProfile", b =>
                {
                    b.Navigation("AppointmentDetails");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.VaccineReceipt", b =>
                {
                    b.Navigation("VaccineReceiptDetails");
                });

            modelBuilder.Entity("PetVax.BusinessObjects.Models.Vet", b =>
                {
                    b.Navigation("AppointmentDetails");

                    b.Navigation("VetSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
